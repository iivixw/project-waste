import React, { useState } from "react";
import axios from "axios";
import "./UpdateWastePriceTime.css";
import SidebarEmployee from "./SidebarEmployee";

const UpdateWastePriceByTime = () => {
  const [wasteType, setWasteType] = useState("");
  const [price, setPrice] = useState("");
  const [startDate, setStartDate] = useState("");
  const [endDate, setEndDate] = useState("");
  const [message, setMessage] = useState("");
  const [showDetails, setShowDetails] = useState(false);
  const [lastSubmittedData, setLastSubmittedData] = useState(null);

  const handleUpdatePrice = async () => {
    if (!wasteType || !price || !startDate || !endDate) {
      setMessage("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
      setLastSubmittedData(null);
      return;
    }

    try {
      const response = await axios.post(
        "http://localhost:5000/api/updateWastePriceByTime",
        {
          waste_type: wasteType,
          price: price,
          start_date: startDate,
          end_date: endDate,
        }
      );

      if (response.status === 200 && response.data.message?.includes("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")) {
        setMessage("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚úÖ");
        setLastSubmittedData({ wasteType, price, startDate, endDate });
        setWasteType("");
        setPrice("");
        setStartDate("");
        setEndDate("");
      } else {
        setMessage("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤");
        setLastSubmittedData(null);
      }
    } catch (error) {
      console.error("Error updating waste price:", error);
      setMessage("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤");
      setLastSubmittedData(null);
    }
  };

  return (
    <div className="update-waste-layout">
      <SidebarEmployee />
      <div className="update-waste-page">
        <div className="update-waste-container">
          <h1 className="update-waste-title">‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏¢‡∏∞‡∏ï‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤</h1>

          <div className="update-waste-form">
            <select value={wasteType} onChange={(e) => setWasteType(e.target.value)}>
              <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏¢‡∏∞</option>
              <option value="‡∏Ç‡∏¢‡∏∞‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ">‡∏Ç‡∏¢‡∏∞‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ</option>
              <option value="‡∏Ç‡∏¢‡∏∞‡∏£‡∏µ‡πÑ‡∏ã‡πÄ‡∏Ñ‡∏¥‡∏•">‡∏Ç‡∏¢‡∏∞‡∏£‡∏µ‡πÑ‡∏ã‡πÄ‡∏Ñ‡∏¥‡∏•</option>
              <option value="‡∏Ç‡∏¢‡∏∞‡∏≠‡∏¥‡∏ô‡∏ó‡∏£‡∏µ‡∏¢‡πå">‡∏Ç‡∏¢‡∏∞‡∏≠‡∏¥‡∏ô‡∏ó‡∏£‡∏µ‡∏¢‡πå</option>
              <option value="‡∏Ç‡∏¢‡∏∞‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢">‡∏Ç‡∏¢‡∏∞‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢</option>
              <option value="‡∏≠‡∏∑‡πà‡∏ô‡πÜ">‡∏≠‡∏∑‡πà‡∏ô‡πÜ</option>
            </select>

            <input
              type="number"
              value={price}
              onChange={(e) => setPrice(e.target.value)}
              placeholder="‡∏õ‡πâ‡∏≠‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏¢‡∏∞ (‡∏ö‡∏≤‡∏ó)"
            />

            {/* ‚úÖ ‡πÅ‡∏¢‡∏Å‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å */}
            <div className="update-date-wrapper">
              <label className="update-label">‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</label>
              <div className="date-input-group">
                <input
                  type="date"
                  value={startDate}
                  onChange={(e) => setStartDate(e.target.value)}
                  className="custom-date-input"
                />
                <input
                  type="date"
                  value={endDate}
                  onChange={(e) => setEndDate(e.target.value)}
                  className="custom-date-input"
                />
              </div>
            </div>

            <button onClick={handleUpdatePrice}>‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤</button>
          </div>

          {message && <p className="update-waste-message">{message}</p>}

          {lastSubmittedData && (
            <div className="waste-added-box">
              <h3>üìå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</h3>
              <p><strong>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:</strong> {lastSubmittedData.wasteType}</p>
              <p><strong>‡∏£‡∏≤‡∏Ñ‡∏≤:</strong> {lastSubmittedData.price} ‡∏ö‡∏≤‡∏ó</p>
              <p><strong>‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤:</strong> {lastSubmittedData.startDate} - {lastSubmittedData.endDate}</p>
            </div>
          )}

          <div className="promo-card">
            <div className="promo-header">
              <div className="promo-circle">‚ôªÔ∏è</div>
              <div>
                <h3 className="promo-rank">‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©</h3>
                <span className="badge">‡∏£‡∏µ‡πÑ‡∏ã‡πÄ‡∏Ñ‡∏¥‡∏•</span>
                <span className="badge yellow">‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 1-7 ‡∏™.‡∏Ñ.</span>
              </div>
              <div className="promo-score">+20%</div>
            </div>
            <div className="promo-desc">‡∏£‡∏±‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡∏¢‡∏∞‡∏£‡∏µ‡πÑ‡∏ã‡πÄ‡∏Ñ‡∏¥‡∏•‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏µ‡πâ</div>
            <button className="promo-btn" onClick={() => setShowDetails(true)}>
              ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
            </button>
          </div>

          {showDetails && (
            <div className="promo-detail-box">
              <div className="promo-detail-header">
                <h3>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô</h3>
                <button className="close-btn" onClick={() => setShowDetails(false)}>‚úï</button>
              </div>
              <p><strong>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏¢‡∏∞:</strong> ‡∏Ç‡∏¢‡∏∞‡∏£‡∏µ‡πÑ‡∏ã‡πÄ‡∏Ñ‡∏¥‡∏•</p>
              <p><strong>‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤:</strong> 1 ‡∏™.‡∏Ñ. - 7 ‡∏™.‡∏Ñ.</p>
              <p><strong>‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©:</strong> ‡πÄ‡∏û‡∏¥‡πà‡∏° 20%</p>
              <p>‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î ‡πÅ‡∏•‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏¢‡∏∞‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô</p>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default UpdateWastePriceByTime;

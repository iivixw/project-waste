import React, { useState } from "react";
import { MdDelete, MdEditDocument, MdSearch } from "react-icons/md";
import Sidebar from "../../sidebar/Sidebar"; 
import "./ComplaintForm.css";

const ComplaintForm = () => {
  const [complaint, setComplaint] = useState({
    type: "",
    garbageTruck: "",
    details: "",
    other: "",
  });

  const [complaintData, setComplaintData] = useState([]);
  const [editingIndex, setEditingIndex] = useState(null);
  const [searchTerm, setSearchTerm] = useState("");

  const garbageTypes = [
    "‡∏Ç‡∏¢‡∏∞‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ",
    "‡∏Ç‡∏¢‡∏∞‡∏£‡∏µ‡πÑ‡∏ã‡πÄ‡∏Ñ‡∏¥‡∏•",
    "‡∏Ç‡∏¢‡∏∞‡∏≠‡∏¥‡∏ô‡∏ó‡∏£‡∏µ‡∏¢‡πå",
    "‡∏Ç‡∏¢‡∏∞‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢",
    "‡∏≠‡∏∑‡πà‡∏ô‡πÜ",
  ];

  const handleChange = (e) => {
    setComplaint({ ...complaint, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (complaint.type.trim() === "" || complaint.details.trim() === "") {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
      return;
    }
    if (editingIndex !== null) {
      const updatedData = [...complaintData];
      updatedData[editingIndex] = {
        ...complaint,
        date: new Date().toLocaleDateString(),
      };
      setComplaintData(updatedData);
      setEditingIndex(null);
      alert("‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
    } else {
      const newEntry = {
        id: complaintData.length + 1,
        ...complaint,
        date: new Date().toLocaleDateString(),
      };
      setComplaintData([...complaintData, newEntry]);
      alert("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
    }
    setComplaint({ type: "", garbageTruck: "", details: "", other: "" });
  };

  const handleEdit = (index) => {
    setComplaint(complaintData[index]);
    setEditingIndex(index);
  };

  const handleDelete = (id) => {
    setComplaintData(complaintData.filter((entry) => entry.id !== id));
  };

  return (
    <div className="complaint-page">
  <Sidebar />
  <div className="complaint-layout">
    {/* üîπ ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• */}
    <div className="main-container">
      <h2 className="custom-heading">‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</h2>

      <div className="inner-form">
        <div className="search-container">
          <input
            type="text"
            className="search-box"
            placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
          />
          <button className="btn-search">
            <MdSearch size={20} /> ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
          </button>
        </div>

        <form onSubmit={handleSubmit}>
          <div className="form-group">
            <label>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏¢‡∏∞ :</label>
            <select name="type" value={complaint.type} onChange={handleChange} required>
              <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</option>
              {garbageTypes.map((type) => (
                <option key={type} value={type}>
                  {type}
                </option>
              ))}
            </select>
          </div>
          <div className="form-group">
            <label>‡∏£‡∏´‡∏±‡∏™‡∏£‡∏ñ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡∏¢‡∏∞ :</label>
            <input
              type="text"
              name="garbageTruck"
              value={complaint.garbageTruck}
              onChange={handleChange}
              required
            />
          </div>
          <div className="form-group">
            <label>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô :</label>
            <textarea
              name="details"
              value={complaint.details}
              onChange={handleChange}
              required
            />
          </div>
          <div className="form-group">
            <label>‡∏≠‡∏∑‡πà‡∏ô‡πÜ :</label>
            <textarea
              name="other"
              value={complaint.other}
              onChange={handleChange}
            />
          </div>
          <div className="button-group">
            <button type="submit" className="btn btn-submit">
              {editingIndex !== null ? "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•" : "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"}
            </button>
            <button type="button" className="btn btn-cancel">
              ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
            </button>
          </div>
        </form>
      </div>
    </div>

    {/* üîπ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô */}
    <div className="table-container">
      <h2 className="custom-heading">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</h2>
      {complaintData.length > 0 ? (
        <table className="complaint-table">
          <thead>
            <tr>
              <th>ID</th>
              <th>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏¢‡∏∞</th>
              <th>‡∏£‡∏´‡∏±‡∏™‡∏£‡∏ñ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡∏¢‡∏∞</th>
              <th>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</th>
              <th>‡∏≠‡∏∑‡πà‡∏ô‡πÜ</th>
              <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</th>
              <th>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</th>
              <th>‡∏•‡∏ö</th>
            </tr>
          </thead>
          <tbody>
            {complaintData.map((entry, index) => (
              <tr key={entry.id}>
                <td>{entry.id}</td>
                <td>{entry.type}</td>
                <td>{entry.garbageTruck}</td>
                <td>{entry.details}</td>
                <td>{entry.other}</td>
                <td>{entry.date}</td>
                <td>
                  <button className="btn btn-edit" onClick={() => handleEdit(index)}>
                    <MdEditDocument size={20} />
                  </button>
                </td>
                <td>
                  <button className="btn btn-delete" onClick={() => handleDelete(entry.id)}>
                    <MdDelete size={20} />
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      ) : (
        <div className="no-data">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</div>

      )}
    </div>
  </div>
</div>

  );
};

export default ComplaintForm;
